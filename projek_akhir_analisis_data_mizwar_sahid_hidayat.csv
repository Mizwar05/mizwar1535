{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Mizwar05/mizwar1535/blob/main/projek_akhir_analisis_data_mizwar_sahid_hidayat.csv\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cP5zh7Ww85Fm"
      },
      "source": [
        "# Proyek Analisis Data: Nama dataset\n",
        "- Nama:mizwar sahid hidayat\n",
        "- Email:mizwarsh1535@gmail.com\n",
        "- Id Dicoding:mizwar1535"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ggwOFmpI88dG"
      },
      "source": [
        "## Menentukan Pertanyaan Bisnis"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6irqmTtg8-IC"
      },
      "source": [
        "- pertanyaan 1 kapankah tahun dengan kondisi udara yang bagus?\n",
        "- pertanyaan 2 apakah yang mempengaruhi tinggi rendahnya suhu udara?"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EueHsNk89AsY"
      },
      "source": [
        "## Menyaipkan semua library yang dibuthkan"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "4cmWv4qc8xWu"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7DwSpkkZ9BqV"
      },
      "source": [
        "## Data Wrangling"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZuJuLGxe9D9O"
      },
      "source": [
        "### Gathering Data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "Rg3wtvOr9DUm",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "01213e4f-c8d1-4eec-b08c-dae814678f90"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   No  year  month  day  hour  PM2.5  PM10   SO2   NO2     CO    O3  TEMP  \\\n",
              "0   1  2013      3    1     0    4.0   4.0   4.0   7.0  300.0  77.0  -0.7   \n",
              "1   2  2013      3    1     1    8.0   8.0   4.0   7.0  300.0  77.0  -1.1   \n",
              "2   3  2013      3    1     2    7.0   7.0   5.0  10.0  300.0  73.0  -1.1   \n",
              "3   4  2013      3    1     3    6.0   6.0  11.0  11.0  300.0  72.0  -1.4   \n",
              "4   5  2013      3    1     4    3.0   3.0  12.0  12.0  300.0  72.0  -2.0   \n",
              "\n",
              "     PRES  DEWP  RAIN   wd  WSPM       station  \n",
              "0  1023.0 -18.8   0.0  NNW   4.4  Aotizhongxin  \n",
              "1  1023.2 -18.2   0.0    N   4.7  Aotizhongxin  \n",
              "2  1023.5 -18.2   0.0  NNW   5.6  Aotizhongxin  \n",
              "3  1024.5 -19.4   0.0   NW   3.1  Aotizhongxin  \n",
              "4  1025.2 -19.5   0.0    N   2.0  Aotizhongxin  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-02db808c-dea9-4a24-aa6c-ceac068d7ca8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>No</th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>day</th>\n",
              "      <th>hour</th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>PM10</th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>TEMP</th>\n",
              "      <th>PRES</th>\n",
              "      <th>DEWP</th>\n",
              "      <th>RAIN</th>\n",
              "      <th>wd</th>\n",
              "      <th>WSPM</th>\n",
              "      <th>station</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2013</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>300.0</td>\n",
              "      <td>77.0</td>\n",
              "      <td>-0.7</td>\n",
              "      <td>1023.0</td>\n",
              "      <td>-18.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NNW</td>\n",
              "      <td>4.4</td>\n",
              "      <td>Aotizhongxin</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>2013</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>8.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>300.0</td>\n",
              "      <td>77.0</td>\n",
              "      <td>-1.1</td>\n",
              "      <td>1023.2</td>\n",
              "      <td>-18.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>N</td>\n",
              "      <td>4.7</td>\n",
              "      <td>Aotizhongxin</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>2013</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>7.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>300.0</td>\n",
              "      <td>73.0</td>\n",
              "      <td>-1.1</td>\n",
              "      <td>1023.5</td>\n",
              "      <td>-18.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NNW</td>\n",
              "      <td>5.6</td>\n",
              "      <td>Aotizhongxin</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>2013</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>6.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>300.0</td>\n",
              "      <td>72.0</td>\n",
              "      <td>-1.4</td>\n",
              "      <td>1024.5</td>\n",
              "      <td>-19.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NW</td>\n",
              "      <td>3.1</td>\n",
              "      <td>Aotizhongxin</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>2013</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>300.0</td>\n",
              "      <td>72.0</td>\n",
              "      <td>-2.0</td>\n",
              "      <td>1025.2</td>\n",
              "      <td>-19.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>N</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Aotizhongxin</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02db808c-dea9-4a24-aa6c-ceac068d7ca8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-02db808c-dea9-4a24-aa6c-ceac068d7ca8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-02db808c-dea9-4a24-aa6c-ceac068d7ca8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9bdac817-eabc-4999-b691-23e08b1d9f6c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9bdac817-eabc-4999-b691-23e08b1d9f6c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9bdac817-eabc-4999-b691-23e08b1d9f6c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "dataku = pd.read_csv('PRSA_Data_Aotizhongxin_20130301-20170228.csv')\n",
        "dataku.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BvZAfrSH9F2U"
      },
      "source": [
        "### Assessing Data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fx7PaLsV9G8M",
        "outputId": "0f560ba1-8f45-4457-c071-bf286aea1e80"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "No            0\n",
              "year          0\n",
              "month         0\n",
              "day           0\n",
              "hour          0\n",
              "PM2.5       925\n",
              "PM10        718\n",
              "SO2         935\n",
              "NO2        1023\n",
              "CO         1776\n",
              "O3         1719\n",
              "TEMP         20\n",
              "PRES         20\n",
              "DEWP         20\n",
              "RAIN         20\n",
              "wd           81\n",
              "WSPM         14\n",
              "station       0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        "dataku.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OXktsJuOUCEg",
        "outputId": "d13c2821-cc70-45c6-b23a-aeb840c8b843"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "dataku.duplicated().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "crAtsX4LWMm2",
        "outputId": "ba19f6ad-4771-4d8e-ed70-d733945b37b0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 35064 entries, 0 to 35063\n",
            "Data columns (total 18 columns):\n",
            " #   Column   Non-Null Count  Dtype  \n",
            "---  ------   --------------  -----  \n",
            " 0   No       35064 non-null  int64  \n",
            " 1   year     35064 non-null  int64  \n",
            " 2   month    35064 non-null  int64  \n",
            " 3   day      35064 non-null  int64  \n",
            " 4   hour     35064 non-null  int64  \n",
            " 5   PM2.5    34139 non-null  float64\n",
            " 6   PM10     34346 non-null  float64\n",
            " 7   SO2      34129 non-null  float64\n",
            " 8   NO2      34041 non-null  float64\n",
            " 9   CO       33288 non-null  float64\n",
            " 10  O3       33345 non-null  float64\n",
            " 11  TEMP     35044 non-null  float64\n",
            " 12  PRES     35044 non-null  float64\n",
            " 13  DEWP     35044 non-null  float64\n",
            " 14  RAIN     35044 non-null  float64\n",
            " 15  wd       34983 non-null  object \n",
            " 16  WSPM     35050 non-null  float64\n",
            " 17  station  35064 non-null  object \n",
            "dtypes: float64(11), int64(5), object(2)\n",
            "memory usage: 4.8+ MB\n"
          ]
        }
      ],
      "source": [
        "dataku.info()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Uz5dgcJm9HW5"
      },
      "source": [
        "### Cleaning Data"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NDEKdcN_xV9u"
      },
      "source": [
        "saya menggunkan metode"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataku = dataku.rename(columns={'PM2.5': 'PM2'})"
      ],
      "metadata": {
        "id": "snubiPZbTJrs"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "CCszTdXD9Ivf"
      },
      "outputs": [],
      "source": [
        "dataku.dropna(axis=0, inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataku.PM2.fillna(value=dataku.PM2.mean(), inplace=True)"
      ],
      "metadata": {
        "id": "C2NoqnfJSd9D"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "id": "rrL7x1_GUwAo"
      },
      "outputs": [],
      "source": [
        "dataku.PM10.fillna(value=dataku.PM10.mean(), inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "id": "KLZRb3bCVejS"
      },
      "outputs": [],
      "source": [
        "dataku.SO2.fillna(value=dataku.SO2.mean(), inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "id": "9QsCe1XnVfgF"
      },
      "outputs": [],
      "source": [
        "dataku.NO2.fillna(value=dataku.NO2.mean(), inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "AdfnbidkVf63"
      },
      "outputs": [],
      "source": [
        "dataku.CO.fillna(value=dataku.CO.mean(), inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "id": "0puYw1wNVgGQ"
      },
      "outputs": [],
      "source": [
        "dataku.O3.fillna(value=dataku.O3.mean(), inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataku.TEMP.fillna(value=dataku.TEMP.mean(), inplace=True)"
      ],
      "metadata": {
        "id": "BvepYqk9V7Ae"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "id": "740zvsjfV_3H",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6c608bfc-c6e4-4e4b-9bbd-45999b4fd66e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "No         0\n",
              "year       0\n",
              "month      0\n",
              "day        0\n",
              "hour       0\n",
              "PM2        0\n",
              "PM10       0\n",
              "SO2        0\n",
              "NO2        0\n",
              "CO         0\n",
              "O3         0\n",
              "TEMP       0\n",
              "PRES       0\n",
              "DEWP       0\n",
              "RAIN       0\n",
              "wd         0\n",
              "WSPM       0\n",
              "station    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "dataku.isnull().sum() # sudah tidak ada data yang kosong"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EyPJaCDm9KFb"
      },
      "source": [
        "## Exploratory Data Analysis (EDA)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hxgJ6qd69Mce"
      },
      "source": [
        "### Explore ..."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "Xo68yguo9LTl",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 414
        },
        "outputId": "c37da56b-1fe6-4748-a396-505c4253b688"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  No          year         month           day          hour  \\\n",
              "count   31815.000000  31815.000000  31815.000000  31815.000000  31815.000000   \n",
              "unique           NaN           NaN           NaN           NaN           NaN   \n",
              "top              NaN           NaN           NaN           NaN           NaN   \n",
              "freq             NaN           NaN           NaN           NaN           NaN   \n",
              "mean    17899.423857   2014.714914      6.401886     15.578564     11.624800   \n",
              "std     10058.429849      1.162536      3.416847      8.794954      6.926874   \n",
              "min         1.000000   2013.000000      1.000000      1.000000      0.000000   \n",
              "25%      9415.500000   2014.000000      3.000000      8.000000      6.000000   \n",
              "50%     18093.000000   2015.000000      6.000000     15.000000     12.000000   \n",
              "75%     26590.500000   2016.000000      9.000000     23.000000     18.000000   \n",
              "max     35064.000000   2017.000000     12.000000     31.000000     23.000000   \n",
              "\n",
              "                PM2          PM10           SO2           NO2            CO  \\\n",
              "count   31815.00000  31815.000000  31815.000000  31815.000000  31815.000000   \n",
              "unique          NaN           NaN           NaN           NaN           NaN   \n",
              "top             NaN           NaN           NaN           NaN           NaN   \n",
              "freq            NaN           NaN           NaN           NaN           NaN   \n",
              "mean       81.86363    109.120685     17.167205     58.976332   1256.574729   \n",
              "std        80.44949     93.718017     22.760801     37.061384   1223.301208   \n",
              "min         3.00000      2.000000      0.571200      2.000000    100.000000   \n",
              "25%        22.00000     37.000000      3.000000     30.000000    500.000000   \n",
              "50%        58.00000     86.000000      8.000000     53.000000    800.000000   \n",
              "75%       114.00000    154.000000     21.000000     82.000000   1500.000000   \n",
              "max       713.00000    948.000000    229.000000    290.000000  10000.000000   \n",
              "\n",
              "                  O3          TEMP          PRES          DEWP          RAIN  \\\n",
              "count   31815.000000  31815.000000  31815.000000  31815.000000  31815.000000   \n",
              "unique           NaN           NaN           NaN           NaN           NaN   \n",
              "top              NaN           NaN           NaN           NaN           NaN   \n",
              "freq             NaN           NaN           NaN           NaN           NaN   \n",
              "mean       56.240938     13.775611   1011.800385      3.241106      0.068235   \n",
              "std        57.834314     11.369035     10.338869     13.667863      0.837489   \n",
              "min         0.214200    -16.800000    985.900000    -35.300000      0.000000   \n",
              "25%         8.000000      3.400000   1003.300000     -8.000000      0.000000   \n",
              "50%        42.000000     14.800000   1011.200000      4.000000      0.000000   \n",
              "75%        82.000000     23.400000   1020.000000     15.700000      0.000000   \n",
              "max       423.000000     40.500000   1042.000000     28.500000     46.400000   \n",
              "\n",
              "           wd          WSPM       station  \n",
              "count   31815  31815.000000         31815  \n",
              "unique     16           NaN             1  \n",
              "top        NE           NaN  Aotizhongxin  \n",
              "freq     4581           NaN         31815  \n",
              "mean      NaN      1.720471           NaN  \n",
              "std       NaN      1.204240           NaN  \n",
              "min       NaN      0.000000           NaN  \n",
              "25%       NaN      0.900000           NaN  \n",
              "50%       NaN      1.400000           NaN  \n",
              "75%       NaN      2.200000           NaN  \n",
              "max       NaN     11.200000           NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-411a8fd3-ff5a-4f8d-8600-984efd1e508d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>No</th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>day</th>\n",
              "      <th>hour</th>\n",
              "      <th>PM2</th>\n",
              "      <th>PM10</th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>TEMP</th>\n",
              "      <th>PRES</th>\n",
              "      <th>DEWP</th>\n",
              "      <th>RAIN</th>\n",
              "      <th>wd</th>\n",
              "      <th>WSPM</th>\n",
              "      <th>station</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.00000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815</td>\n",
              "      <td>31815.000000</td>\n",
              "      <td>31815</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>unique</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>top</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Aotizhongxin</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>freq</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4581</td>\n",
              "      <td>NaN</td>\n",
              "      <td>31815</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>17899.423857</td>\n",
              "      <td>2014.714914</td>\n",
              "      <td>6.401886</td>\n",
              "      <td>15.578564</td>\n",
              "      <td>11.624800</td>\n",
              "      <td>81.86363</td>\n",
              "      <td>109.120685</td>\n",
              "      <td>17.167205</td>\n",
              "      <td>58.976332</td>\n",
              "      <td>1256.574729</td>\n",
              "      <td>56.240938</td>\n",
              "      <td>13.775611</td>\n",
              "      <td>1011.800385</td>\n",
              "      <td>3.241106</td>\n",
              "      <td>0.068235</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.720471</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>10058.429849</td>\n",
              "      <td>1.162536</td>\n",
              "      <td>3.416847</td>\n",
              "      <td>8.794954</td>\n",
              "      <td>6.926874</td>\n",
              "      <td>80.44949</td>\n",
              "      <td>93.718017</td>\n",
              "      <td>22.760801</td>\n",
              "      <td>37.061384</td>\n",
              "      <td>1223.301208</td>\n",
              "      <td>57.834314</td>\n",
              "      <td>11.369035</td>\n",
              "      <td>10.338869</td>\n",
              "      <td>13.667863</td>\n",
              "      <td>0.837489</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.204240</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>2013.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.00000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.571200</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>0.214200</td>\n",
              "      <td>-16.800000</td>\n",
              "      <td>985.900000</td>\n",
              "      <td>-35.300000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>9415.500000</td>\n",
              "      <td>2014.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>22.00000</td>\n",
              "      <td>37.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>3.400000</td>\n",
              "      <td>1003.300000</td>\n",
              "      <td>-8.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.900000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>18093.000000</td>\n",
              "      <td>2015.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>58.00000</td>\n",
              "      <td>86.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>53.000000</td>\n",
              "      <td>800.000000</td>\n",
              "      <td>42.000000</td>\n",
              "      <td>14.800000</td>\n",
              "      <td>1011.200000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.400000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>26590.500000</td>\n",
              "      <td>2016.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>114.00000</td>\n",
              "      <td>154.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>82.000000</td>\n",
              "      <td>1500.000000</td>\n",
              "      <td>82.000000</td>\n",
              "      <td>23.400000</td>\n",
              "      <td>1020.000000</td>\n",
              "      <td>15.700000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.200000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>35064.000000</td>\n",
              "      <td>2017.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>713.00000</td>\n",
              "      <td>948.000000</td>\n",
              "      <td>229.000000</td>\n",
              "      <td>290.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>423.000000</td>\n",
              "      <td>40.500000</td>\n",
              "      <td>1042.000000</td>\n",
              "      <td>28.500000</td>\n",
              "      <td>46.400000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>11.200000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-411a8fd3-ff5a-4f8d-8600-984efd1e508d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-411a8fd3-ff5a-4f8d-8600-984efd1e508d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-411a8fd3-ff5a-4f8d-8600-984efd1e508d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e95cab7b-7ba6-4057-896b-c334a08a1e14\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e95cab7b-7ba6-4057-896b-c334a08a1e14')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e95cab7b-7ba6-4057-896b-c334a08a1e14 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "dataku.describe(include=\"all\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SCNmtOLp9OKB"
      },
      "source": [
        "## Visualization & Explanatory Analysis"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "id": "AWW6VdPAZcgb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "outputId": "9159f4d6-4e11-43c4-c8a4-390e5f5cb4f4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<Axes: title={'center': 'No'}>, <Axes: title={'center': 'year'}>,\n",
              "        <Axes: title={'center': 'month'}>,\n",
              "        <Axes: title={'center': 'day'}>],\n",
              "       [<Axes: title={'center': 'hour'}>,\n",
              "        <Axes: title={'center': 'PM2'}>,\n",
              "        <Axes: title={'center': 'PM10'}>,\n",
              "        <Axes: title={'center': 'SO2'}>],\n",
              "       [<Axes: title={'center': 'NO2'}>, <Axes: title={'center': 'CO'}>,\n",
              "        <Axes: title={'center': 'O3'}>, <Axes: title={'center': 'TEMP'}>],\n",
              "       [<Axes: title={'center': 'PRES'}>,\n",
              "        <Axes: title={'center': 'DEWP'}>,\n",
              "        <Axes: title={'center': 'RAIN'}>,\n",
              "        <Axes: title={'center': 'WSPM'}>]], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 16 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "dataku.hist()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "id": "HQ5hk-t4Zwcq",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 606
        },
        "outputId": "ec8d07f6-653b-4190-e8b1-90f6951e77e1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-18-778355fc5460>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
            "  dataku.corr()\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             No      year     month       day      hour       PM2      PM10  \\\n",
              "No     1.000000  0.969426  0.067551  0.026484  0.006155 -0.027866 -0.085685   \n",
              "year   0.969426  1.000000 -0.178465  0.002849  0.004969 -0.031908 -0.076424   \n",
              "month  0.067551 -0.178465  1.000000  0.010692  0.001735  0.016911 -0.035822   \n",
              "day    0.026484  0.002849  0.010692  1.000000 -0.000207  0.009715  0.033096   \n",
              "hour   0.006155  0.004969  0.001735 -0.000207  1.000000 -0.010580  0.020580   \n",
              "PM2   -0.027866 -0.031908  0.016911  0.009715 -0.010580  1.000000  0.878741   \n",
              "PM10  -0.085685 -0.076424 -0.035822  0.033096  0.020580  0.878741  1.000000   \n",
              "SO2   -0.245131 -0.175384 -0.270781 -0.023222  0.001181  0.489449  0.479850   \n",
              "NO2   -0.086058 -0.112066  0.109088  0.016110 -0.045403  0.686048  0.653409   \n",
              "CO     0.070917  0.058492  0.047609 -0.020095 -0.045401  0.786252  0.682088   \n",
              "O3     0.063351  0.085586 -0.093766  0.007848  0.296388 -0.166250 -0.146959   \n",
              "TEMP  -0.116645 -0.158463  0.177046  0.031208  0.139401 -0.125711 -0.110371   \n",
              "PRES   0.241082  0.246033 -0.037046  0.010470 -0.038339 -0.008697 -0.034957   \n",
              "DEWP  -0.139133 -0.215746  0.318998  0.044015 -0.013471  0.125706  0.063988   \n",
              "RAIN   0.004014 -0.000300  0.017630 -0.000800  0.012211 -0.020498 -0.032775   \n",
              "WSPM   0.097572  0.135931 -0.160100 -0.021669  0.150500 -0.286331 -0.188684   \n",
              "\n",
              "            SO2       NO2        CO        O3      TEMP      PRES      DEWP  \\\n",
              "No    -0.245131 -0.086058  0.070917  0.063351 -0.116645  0.241082 -0.139133   \n",
              "year  -0.175384 -0.112066  0.058492  0.085586 -0.158463  0.246033 -0.215746   \n",
              "month -0.270781  0.109088  0.047609 -0.093766  0.177046 -0.037046  0.318998   \n",
              "day   -0.023222  0.016110 -0.020095  0.007848  0.031208  0.010470  0.044015   \n",
              "hour   0.001181 -0.045403 -0.045401  0.296388  0.139401 -0.038339 -0.013471   \n",
              "PM2    0.489449  0.686048  0.786252 -0.166250 -0.125711 -0.008697  0.125706   \n",
              "PM10   0.479850  0.653409  0.682088 -0.146959 -0.110371 -0.034957  0.063988   \n",
              "SO2    1.000000  0.437707  0.539348 -0.202866 -0.353431  0.204208 -0.282847   \n",
              "NO2    0.437707  1.000000  0.690435 -0.507433 -0.244404  0.085013  0.064514   \n",
              "CO     0.539348  0.690435  1.000000 -0.326466 -0.364495  0.214581 -0.096809   \n",
              "O3    -0.202866 -0.507433 -0.326466  1.000000  0.588734 -0.423276  0.291221   \n",
              "TEMP  -0.353431 -0.244404 -0.364495  0.588734  1.000000 -0.828165  0.821037   \n",
              "PRES   0.204208  0.085013  0.214581 -0.423276 -0.828165  1.000000 -0.774608   \n",
              "DEWP  -0.282847  0.064514 -0.096809  0.291221  0.821037 -0.774608  1.000000   \n",
              "RAIN  -0.044462 -0.043205 -0.017992  0.024569  0.037579 -0.064901  0.086918   \n",
              "WSPM  -0.113536 -0.494955 -0.283877  0.344954  0.031122  0.076706 -0.311576   \n",
              "\n",
              "           RAIN      WSPM  \n",
              "No     0.004014  0.097572  \n",
              "year  -0.000300  0.135931  \n",
              "month  0.017630 -0.160100  \n",
              "day   -0.000800 -0.021669  \n",
              "hour   0.012211  0.150500  \n",
              "PM2   -0.020498 -0.286331  \n",
              "PM10  -0.032775 -0.188684  \n",
              "SO2   -0.044462 -0.113536  \n",
              "NO2   -0.043205 -0.494955  \n",
              "CO    -0.017992 -0.283877  \n",
              "O3     0.024569  0.344954  \n",
              "TEMP   0.037579  0.031122  \n",
              "PRES  -0.064901  0.076706  \n",
              "DEWP   0.086918 -0.311576  \n",
              "RAIN   1.000000  0.021354  \n",
              "WSPM   0.021354  1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-082f66dd-cfcf-44a2-8b05-eca3b04cbfa2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>No</th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>day</th>\n",
              "      <th>hour</th>\n",
              "      <th>PM2</th>\n",
              "      <th>PM10</th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>TEMP</th>\n",
              "      <th>PRES</th>\n",
              "      <th>DEWP</th>\n",
              "      <th>RAIN</th>\n",
              "      <th>WSPM</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>No</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.969426</td>\n",
              "      <td>0.067551</td>\n",
              "      <td>0.026484</td>\n",
              "      <td>0.006155</td>\n",
              "      <td>-0.027866</td>\n",
              "      <td>-0.085685</td>\n",
              "      <td>-0.245131</td>\n",
              "      <td>-0.086058</td>\n",
              "      <td>0.070917</td>\n",
              "      <td>0.063351</td>\n",
              "      <td>-0.116645</td>\n",
              "      <td>0.241082</td>\n",
              "      <td>-0.139133</td>\n",
              "      <td>0.004014</td>\n",
              "      <td>0.097572</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>year</th>\n",
              "      <td>0.969426</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.178465</td>\n",
              "      <td>0.002849</td>\n",
              "      <td>0.004969</td>\n",
              "      <td>-0.031908</td>\n",
              "      <td>-0.076424</td>\n",
              "      <td>-0.175384</td>\n",
              "      <td>-0.112066</td>\n",
              "      <td>0.058492</td>\n",
              "      <td>0.085586</td>\n",
              "      <td>-0.158463</td>\n",
              "      <td>0.246033</td>\n",
              "      <td>-0.215746</td>\n",
              "      <td>-0.000300</td>\n",
              "      <td>0.135931</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>month</th>\n",
              "      <td>0.067551</td>\n",
              "      <td>-0.178465</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.010692</td>\n",
              "      <td>0.001735</td>\n",
              "      <td>0.016911</td>\n",
              "      <td>-0.035822</td>\n",
              "      <td>-0.270781</td>\n",
              "      <td>0.109088</td>\n",
              "      <td>0.047609</td>\n",
              "      <td>-0.093766</td>\n",
              "      <td>0.177046</td>\n",
              "      <td>-0.037046</td>\n",
              "      <td>0.318998</td>\n",
              "      <td>0.017630</td>\n",
              "      <td>-0.160100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>day</th>\n",
              "      <td>0.026484</td>\n",
              "      <td>0.002849</td>\n",
              "      <td>0.010692</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.000207</td>\n",
              "      <td>0.009715</td>\n",
              "      <td>0.033096</td>\n",
              "      <td>-0.023222</td>\n",
              "      <td>0.016110</td>\n",
              "      <td>-0.020095</td>\n",
              "      <td>0.007848</td>\n",
              "      <td>0.031208</td>\n",
              "      <td>0.010470</td>\n",
              "      <td>0.044015</td>\n",
              "      <td>-0.000800</td>\n",
              "      <td>-0.021669</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>hour</th>\n",
              "      <td>0.006155</td>\n",
              "      <td>0.004969</td>\n",
              "      <td>0.001735</td>\n",
              "      <td>-0.000207</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.010580</td>\n",
              "      <td>0.020580</td>\n",
              "      <td>0.001181</td>\n",
              "      <td>-0.045403</td>\n",
              "      <td>-0.045401</td>\n",
              "      <td>0.296388</td>\n",
              "      <td>0.139401</td>\n",
              "      <td>-0.038339</td>\n",
              "      <td>-0.013471</td>\n",
              "      <td>0.012211</td>\n",
              "      <td>0.150500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PM2</th>\n",
              "      <td>-0.027866</td>\n",
              "      <td>-0.031908</td>\n",
              "      <td>0.016911</td>\n",
              "      <td>0.009715</td>\n",
              "      <td>-0.010580</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.878741</td>\n",
              "      <td>0.489449</td>\n",
              "      <td>0.686048</td>\n",
              "      <td>0.786252</td>\n",
              "      <td>-0.166250</td>\n",
              "      <td>-0.125711</td>\n",
              "      <td>-0.008697</td>\n",
              "      <td>0.125706</td>\n",
              "      <td>-0.020498</td>\n",
              "      <td>-0.286331</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PM10</th>\n",
              "      <td>-0.085685</td>\n",
              "      <td>-0.076424</td>\n",
              "      <td>-0.035822</td>\n",
              "      <td>0.033096</td>\n",
              "      <td>0.020580</td>\n",
              "      <td>0.878741</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.479850</td>\n",
              "      <td>0.653409</td>\n",
              "      <td>0.682088</td>\n",
              "      <td>-0.146959</td>\n",
              "      <td>-0.110371</td>\n",
              "      <td>-0.034957</td>\n",
              "      <td>0.063988</td>\n",
              "      <td>-0.032775</td>\n",
              "      <td>-0.188684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SO2</th>\n",
              "      <td>-0.245131</td>\n",
              "      <td>-0.175384</td>\n",
              "      <td>-0.270781</td>\n",
              "      <td>-0.023222</td>\n",
              "      <td>0.001181</td>\n",
              "      <td>0.489449</td>\n",
              "      <td>0.479850</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.437707</td>\n",
              "      <td>0.539348</td>\n",
              "      <td>-0.202866</td>\n",
              "      <td>-0.353431</td>\n",
              "      <td>0.204208</td>\n",
              "      <td>-0.282847</td>\n",
              "      <td>-0.044462</td>\n",
              "      <td>-0.113536</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NO2</th>\n",
              "      <td>-0.086058</td>\n",
              "      <td>-0.112066</td>\n",
              "      <td>0.109088</td>\n",
              "      <td>0.016110</td>\n",
              "      <td>-0.045403</td>\n",
              "      <td>0.686048</td>\n",
              "      <td>0.653409</td>\n",
              "      <td>0.437707</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.690435</td>\n",
              "      <td>-0.507433</td>\n",
              "      <td>-0.244404</td>\n",
              "      <td>0.085013</td>\n",
              "      <td>0.064514</td>\n",
              "      <td>-0.043205</td>\n",
              "      <td>-0.494955</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CO</th>\n",
              "      <td>0.070917</td>\n",
              "      <td>0.058492</td>\n",
              "      <td>0.047609</td>\n",
              "      <td>-0.020095</td>\n",
              "      <td>-0.045401</td>\n",
              "      <td>0.786252</td>\n",
              "      <td>0.682088</td>\n",
              "      <td>0.539348</td>\n",
              "      <td>0.690435</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.326466</td>\n",
              "      <td>-0.364495</td>\n",
              "      <td>0.214581</td>\n",
              "      <td>-0.096809</td>\n",
              "      <td>-0.017992</td>\n",
              "      <td>-0.283877</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>O3</th>\n",
              "      <td>0.063351</td>\n",
              "      <td>0.085586</td>\n",
              "      <td>-0.093766</td>\n",
              "      <td>0.007848</td>\n",
              "      <td>0.296388</td>\n",
              "      <td>-0.166250</td>\n",
              "      <td>-0.146959</td>\n",
              "      <td>-0.202866</td>\n",
              "      <td>-0.507433</td>\n",
              "      <td>-0.326466</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.588734</td>\n",
              "      <td>-0.423276</td>\n",
              "      <td>0.291221</td>\n",
              "      <td>0.024569</td>\n",
              "      <td>0.344954</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TEMP</th>\n",
              "      <td>-0.116645</td>\n",
              "      <td>-0.158463</td>\n",
              "      <td>0.177046</td>\n",
              "      <td>0.031208</td>\n",
              "      <td>0.139401</td>\n",
              "      <td>-0.125711</td>\n",
              "      <td>-0.110371</td>\n",
              "      <td>-0.353431</td>\n",
              "      <td>-0.244404</td>\n",
              "      <td>-0.364495</td>\n",
              "      <td>0.588734</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.828165</td>\n",
              "      <td>0.821037</td>\n",
              "      <td>0.037579</td>\n",
              "      <td>0.031122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PRES</th>\n",
              "      <td>0.241082</td>\n",
              "      <td>0.246033</td>\n",
              "      <td>-0.037046</td>\n",
              "      <td>0.010470</td>\n",
              "      <td>-0.038339</td>\n",
              "      <td>-0.008697</td>\n",
              "      <td>-0.034957</td>\n",
              "      <td>0.204208</td>\n",
              "      <td>0.085013</td>\n",
              "      <td>0.214581</td>\n",
              "      <td>-0.423276</td>\n",
              "      <td>-0.828165</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.774608</td>\n",
              "      <td>-0.064901</td>\n",
              "      <td>0.076706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DEWP</th>\n",
              "      <td>-0.139133</td>\n",
              "      <td>-0.215746</td>\n",
              "      <td>0.318998</td>\n",
              "      <td>0.044015</td>\n",
              "      <td>-0.013471</td>\n",
              "      <td>0.125706</td>\n",
              "      <td>0.063988</td>\n",
              "      <td>-0.282847</td>\n",
              "      <td>0.064514</td>\n",
              "      <td>-0.096809</td>\n",
              "      <td>0.291221</td>\n",
              "      <td>0.821037</td>\n",
              "      <td>-0.774608</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.086918</td>\n",
              "      <td>-0.311576</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RAIN</th>\n",
              "      <td>0.004014</td>\n",
              "      <td>-0.000300</td>\n",
              "      <td>0.017630</td>\n",
              "      <td>-0.000800</td>\n",
              "      <td>0.012211</td>\n",
              "      <td>-0.020498</td>\n",
              "      <td>-0.032775</td>\n",
              "      <td>-0.044462</td>\n",
              "      <td>-0.043205</td>\n",
              "      <td>-0.017992</td>\n",
              "      <td>0.024569</td>\n",
              "      <td>0.037579</td>\n",
              "      <td>-0.064901</td>\n",
              "      <td>0.086918</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.021354</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>WSPM</th>\n",
              "      <td>0.097572</td>\n",
              "      <td>0.135931</td>\n",
              "      <td>-0.160100</td>\n",
              "      <td>-0.021669</td>\n",
              "      <td>0.150500</td>\n",
              "      <td>-0.286331</td>\n",
              "      <td>-0.188684</td>\n",
              "      <td>-0.113536</td>\n",
              "      <td>-0.494955</td>\n",
              "      <td>-0.283877</td>\n",
              "      <td>0.344954</td>\n",
              "      <td>0.031122</td>\n",
              "      <td>0.076706</td>\n",
              "      <td>-0.311576</td>\n",
              "      <td>0.021354</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-082f66dd-cfcf-44a2-8b05-eca3b04cbfa2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-082f66dd-cfcf-44a2-8b05-eca3b04cbfa2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-082f66dd-cfcf-44a2-8b05-eca3b04cbfa2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f9d03ee6-7925-4193-8f0b-9ddc859203e7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9d03ee6-7925-4193-8f0b-9ddc859203e7')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f9d03ee6-7925-4193-8f0b-9ddc859203e7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ],
      "source": [
        "dataku.corr()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SG59_Fbj9Qr6"
      },
      "source": [
        "### Pertanyaan 1:"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(nrows=1, ncols=5, figsize=(30, 6))\n",
        "\n",
        "colors = [\"#72BCD4\", \"#72BCD4\", \"#72BCD4\", \"#72BCD4\", \"#72BCD4\"]\n",
        "\n",
        "sns.barplot(y=\"SO2\", x=\"year\", data=dataku.sort_values(by=\"SO2\", ascending=True), palette=colors, ax=ax[0])\n",
        "ax[0].set_ylabel(None)\n",
        "ax[0].set_xlabel(None)\n",
        "ax[0].set_title(\"RATA RATA SO2 TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[0].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "sns.barplot(y=\"NO2\", x=\"year\", data=dataku.sort_values(by=\"NO2\", ascending=True), palette=colors, ax=ax[1])\n",
        "ax[1].set_ylabel(None)\n",
        "ax[1].set_xlabel(None)\n",
        "ax[1].set_title(\"RATA RATA NO2 TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[1].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "sns.barplot(y=\"CO\", x=\"year\", data=dataku.sort_values(by=\"CO\", ascending=True), palette=colors, ax=ax[2])\n",
        "ax[2].set_ylabel(None)\n",
        "ax[2].set_xlabel(None)\n",
        "ax[2].set_title(\"RATA RATA CO TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[2].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "sns.barplot(y=\"PM2\", x=\"year\", data=dataku.sort_values(by=\"PM2\", ascending=True), palette=colors, ax=ax[3])\n",
        "ax[3].set_ylabel(None)\n",
        "ax[3].set_xlabel(None)\n",
        "ax[3].set_title(\"RATA RATA PM2 TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[3].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "sns.barplot(y=\"O3\", x=\"year\", data=dataku.sort_values(by=\"O3\", ascending=True), palette=colors, ax=ax[4])\n",
        "ax[4].set_ylabel(None)\n",
        "ax[4].set_xlabel(None)\n",
        "ax[4].set_title(\"RATA RATA O3,5 TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[4].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "plt.suptitle(\"HUBUNGAN SUHU DENGAN SENYAWA POLUTAN\", fontsize=20)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "id": "-61DQw-ZUNSD",
        "outputId": "5584cce8-82e9-4d98-d815-820a96a86b7f"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x600 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "F2Bo_ypQ9RfH"
      },
      "source": [
        "### Pertanyaan 2:"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(nrows=1, ncols=6, figsize=(30, 6))\n",
        "\n",
        "colors = [\"#72BCD4\", \"#72BCD4\", \"#72BCD4\", \"#72BCD4\", \"#72BCD4\"]\n",
        "\n",
        "sns.barplot(y=\"SO2\", x=\"year\", data=dataku.sort_values(by=\"SO2\", ascending=True), palette=colors, ax=ax[0])\n",
        "ax[0].set_ylabel(None)\n",
        "ax[0].set_xlabel(None)\n",
        "ax[0].set_title(\"RATA RATA SO2 TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[0].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "sns.barplot(y=\"NO2\", x=\"year\", data=dataku.sort_values(by=\"NO2\", ascending=True), palette=colors, ax=ax[1])\n",
        "ax[1].set_ylabel(None)\n",
        "ax[1].set_xlabel(None)\n",
        "ax[1].set_title(\"RATA RATA NO2 TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[1].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "sns.barplot(y=\"CO\", x=\"year\", data=dataku.sort_values(by=\"CO\", ascending=True), palette=colors, ax=ax[2])\n",
        "ax[2].set_ylabel(None)\n",
        "ax[2].set_xlabel(None)\n",
        "ax[2].set_title(\"RATA RATA CO TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[2].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "sns.barplot(y=\"O3\", x=\"year\", data=dataku.sort_values(by=\"O3\", ascending=True), palette=colors, ax=ax[3])\n",
        "ax[3].set_ylabel(None)\n",
        "ax[3].set_xlabel(None)\n",
        "ax[3].set_title(\"RATA RATA O3 TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[3].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "\n",
        "sns.barplot(y=\"TEMP\", x=\"year\", data=dataku.sort_values(by=\"TEMP\", ascending=True), palette=colors, ax=ax[4])\n",
        "ax[4].set_ylabel(None)\n",
        "ax[4].set_xlabel(None)\n",
        "ax[4].set_title(\"RATA RATA SUHU TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[4].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "sns.barplot(y=\"PM2\", x=\"year\", data=dataku.sort_values(by=\"PM2\", ascending=True), palette=colors, ax=ax[5])\n",
        "ax[5].set_ylabel(None)\n",
        "ax[5].set_xlabel(None)\n",
        "ax[5].set_title(\"RATA RATA PM2,5 TIAP TAHUN\", loc=\"center\", fontsize=18)\n",
        "ax[5].tick_params(axis ='x', labelsize=15)\n",
        "\n",
        "plt.suptitle(\"HUBUNGAN SUHU DENGAN SENYAWA POLUTAN\", fontsize=20)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "NpdfXMgt4pk5",
        "outputId": "4caf2c2c-5128-4f79-fd15-8e6b2ecffb27"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x600 with 6 Axes>"
            ],
            "image/png": "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yxozZoyWLVumpUuXqkyZMmnWa/3s0hIYGJhmmQ8++EDNmzd3qr7UJCYm6pVXXtFXX30lKWnkqObNm6tp06YqX768goODdfnyZZ06dUqrV6/WkiVLFBkZqVmzZqlixYp6991309yGNRHC399fV65c0b59+/Tnn3/qgQcecDne4cOHq0ePHvL19XV5XWetX79e7du3140bN+Tp6anOnTurZcuWCgsLk6enpyIjI/X3339rxYoV2rhxo1N15oTPvXr16nrzzTc1atQorVmzRl9//bVefPHFVMv36dNH586dkyR99dVX8vf3T1Hmjz/+0OHDhyX99/nOmDFDnTp1sltn8gSo9evXp/o+9u7dq3PnzsnDw0OJiYk6evSoTp48qeLFi9st72ySVWbui47c2n/ExsZq165dGjt2rHbt2qWDBw+qWbNm2rNnj/LmzWuz7o0bN9StWzfNmzdPkuTn56fu3buradOmKlasmK5evapdu3Zp+vTp+uuvv7R582bVq1dPixcvNpPYcpJixYo53P8rVaokSapZs6amTp3qdL2u7nuOnDx5Ul999ZVee+01l9cFAAAAAOReJFkBAAAAwG3AOiXcrerWrauOHTuqUqVKioqK0pw5czR69GgVLVo0y2ILCAhQXFyc4uPj9cEHH2jRokXprmv37t1q166drl27pjx58mjs2LF66aWX5OGRciDmli1basiQIfrjjz/Uv39/RUVFObUN6w33GjVqKDw8XBMmTNB3332nsWPHytvb2+lY77rrLp07d06DBg1Sy5YtXZqGzxXffPONebP62Wef1bfffpuiPR5++GG9+OKLiouL09y5c5U/f363xHKnS+179thjj6lv3746fvy4nn/+ea1cuVIHDhxQixYttHnzZgUHBzus116drrLub3///bcWLFigNm3apLuuwYMHmwlWZcuW1ffff59qcmSXLl10/fp1TZkyRQMHDnSq/pMnT2r16tXmtj766CNdvHhRM2bMcCmxxfqeT58+rYkTJ+r11193el1XvfHGG2aC1YoVK9S4ceMUZZo1a6YBAwbo2LFjWrVqVZp15pTPffDgwVqwYIEOHDigfv36qUWLFipWrFiKcj///LPmzJkjSerevbuaNGlitz5rHxoSEqK+ffuqf//++vXXXxUZGamQkJAU5WvWrCk/Pz/FxsZq3bp1qcZpXVa5cmXFxsZq//79Wrdunbp06WK3vDXJqkCBAqm2dWbti86w13/UqlVLXbt2VaNGjbRx40YdO3ZMkydPVu/evW3KDRgwwEywqlSpkhYuXKi7777bpkz9+vXVq1cvffbZZ3r77bcVHR2t1q1ba8eOHakmomWXPHnyOLX/58uXz6Xviav7Xmqs36sRI0bohRdekJ+fn9PrAgAAAAByN6YLBAAAAIDbXEhIiLp16yYpabqhv/76K0u3X6BAAT3//POSkqbbSu/2DcNQly5ddO3aNUnSrFmz9Morr9hNsEquXr16Wrt2rVMJIKdPnzaTI7p27aqnnnpKknThwgUtXbrUpXj79esnSdq+fbt++uknl9Z1hTVpzcvLS5999pnD9vDx8dEzzzyj0NBQt8WTm5UsWVLLly83R+I5cOBApk6T6cgzzzyjQoUKSUpKFklr2rfU/Pnnn+ZoOyVKlNDGjRvTHH3O19dXr7zyinbu3OlUYsqsWbOUmJgoLy8vdevWTR06dJAkzZs3Tzdu3HA61mbNmpkJGKNGjTL7hsx2+vRps99q06aN3QSr5EqVKqXnnnvOLbHcKjM+d19fX02ePFkWi0UxMTF6+eWXU5S5fPmyXnrpJUlJx5QxY8bYrev69euaP3++JKljx456+umn5eHhoZs3b2r27Nl21/H29lZ4eLgkadu2bYqNjbVbzpo0Va9ePdWrV8/mtVudO3fOnBa1Xr16qSa5Zta+mBE+Pj768MMPzb9XrFhhs3zz5s365JNPJElFixbVb7/9liLByspisejNN98067tw4YLDkcnuJOnZ91JjPX5HRERowoQJmR4rAAAAAODORZIVAAAAANwBwsLCzOdxcXFZvv333nvPnMrrgw8+SFcdixcvNkdsateunZ588kmn1/Xw8FDXrl3TLGe94W6dDqxOnTq69957Jf03QoazevXqZY6cMWjQICUmJrq0vrOOHz8uKWnkDUaoyn6enp6aNm2aOd3XN998Y06v5k758uUzp+nbuXOnmWzgqhEjRpiJOhMmTFDBggWdXrdYsWJq1KhRmuVmzpwpKWkEsEKFCunpp5+WJJ0/f17Lli1zenseHh4aMmSIJCkyMlJffvml0+u6wvodk2T2BzlFZn3u9erV0yuvvCJJWrJkiebOnWuz/N1339WJEyckSePHj091dLbFixcrOjpakvTUU0+pWLFiatiwoSTHfah1Or/4+Hht2bLFbhlrQtVDDz2UZpLVH3/8Ye7HjqYKzKx9MaOSJyceO3bMZtmoUaPM9zJmzBgVLlw4zfreeecdMwHx559/1s6dOzMx2pwpvfuePe3bt1flypUlJbX/1atXMzVWAAAAAMCdiyQrAAAAALgDJL9pW7JkySzffrFixczRNJYvX65Nmza5XMf06dPN53369Mm02JKz3nB/5JFHzNGerMlZP//8s86fP+90XXnz5jWTH/7991999913mRxtEusUhpGRkbpw4YJbtgHX3HXXXeYoaLGxsfr111+zZLsvv/yyihQpIilpVCNXE/uio6O1ePFiSdI999xjjsiVmf766y/t2bNHksw2qlu3rpkI6moyRJs2bVS1alVJ0ujRo3X58uXMC/b/JZ8mdO/evZlef0Zl9HO3GjlypHl8eO2118zkwD/++EMTJ06UJLVt21bt2rVLtQ7r51euXDnVqlVL0n+f844dO8xE2VslT4SyN2XgsWPHzGS35CNZ7dmzx26/nDz5KrUkq8zeFzMiT5485vObN2+azy9evGh+J4sXL6727ds7VZ+Xl5deffVV8+9p06ZlTqA5WHr3PXssFouZwBkVFaXPP/88k6MFAAAAANypSLICAAAAgNvc2bNnzZuPJUqUUPXq1bMljv79+5uj+zgzdV9yhmGYN94DAgJUt27dTI/v77//1u7duyX9d2M2+fMbN26kGN0lLS+99JKKFi0qSRoyZIjNzfPMYv08DcPQCy+8oCtXrmT6NuC65FPKpTbaTmbz8/NT//79JSUlA82ZM8el9devX28m6DRp0iTVKdYywtoXBQQEqFWrVpKSEhq6dOkiSVq2bJlLyYIWi0VDhw6VlDT60Lhx4zI5YqlChQrmSHyLFy92eeoxd8vo527l7++vr776SlLSdHuvvfaa4uLi9Pzzz8swDAUHB2v8+PGprn/27Fn98ssvkmQzcmC7du3k5+cnyTZZNrk6deqYiUb2vi/W18LCwlS0aFHde++9Cg0NlWEY+uOPP1It7+/vn+oxL7P3xYxIngBkPWZI0oYNG8zv5OOPP57m9LjJPfHEE+bzrOqDsktG9r3UtG7dWjVq1JAkffLJJ4qJicmkaAEAAAAAdzKSrAAAAADkemfPntXu3bvTfFinqckO0dHRKeLZuHGjvvzyS9WtW1eRkZHy9vbWF198YTNiRlYKCQlRr169JEmrVq2yO1pJak6fPm2OVlKlShWXbjQ7y3rDPW/evGrTpo35+r333qvw8HCbMs7y9fXVgAEDJEn79+93S3LGK6+8YrbHTz/9pBIlSqhbt2765ptvtHPnTrckdrnK3v5p73H27NnsDjXTJE/sOHDggMOyzrTNqVOnnNpuz549Vbx4cUnS0KFDXfr8k08p5o5kzBs3bmjevHmSkkagsiZdSv8lM8bHx5tlnNWyZUtz5JrPPvtMly5dyqSIk/j5+en555+XlJTM+NRTT6lixYp65513tHDhQp0+fTpd9eaUzz25pk2bqlu3bpKkuXPnqnnz5tq/f7+kpLa1jvBnz5w5c5SQkCDJNlE1ICDATPiZM2eO3djy5s1r7nObNm0y67FKPlWglTXZ9tYEoqtXr+qff/6RJD344IPy9PRMsT137YvpNWrUKPN5gwYNzOc7duwwn7v6nSxSpIj5ed3p0wVmZN9zxJrAeeHCBY0dOzZzggUAAAAA3NFIsgIAAACQ602cOFGVKlVK87Fo0aJsi3HRokUp4qlbt6569+6tQ4cOqWPHjtq4caM5Wkd26devn/z9/SW5NpqVddoqSSpUqJDDsv/73/9cToRLSEgwR6lq3bq1GaPV008/LUnaunWr9u3b53TckvT888+bU3ANHTo0RfJARj3wwAP66quvzOS56OhozZw5Uz179lSVKlUUFBSkxx57TN98842uXr2aqdt2lr39097DOiXZnaBgwYLm84sXLzos60zbWJP10uLj42OWPXjwoEuJgc5+z65fv+4wMSg1y5cvV1RUlCTbRAhJKl++vGrWrCkpfdO0WZMhLl68qM8++8zl9dMyevRoNWvWzPx7z549Gj16tNq0aaNixYqpVKlSeu6557RmzRqn68wpn/utxowZo5CQEElJCbGS9Nhjj+mZZ55xuJ51mw8++KA55Z6VtQ89c+aMVq5caXd967R+yZOkrKyJVNZpApM/vzXJKnmSVmpTBbpzX3TW9evXtXXrVrVv314//PCDJCkwMNCcWley/U46SnBLjfVzjI+Pd8tUmjlFRve91Dz++OOqXbu2pKQkw7T6cgAAAAAASLICAAAAgDvAkiVL9OWXX2braFuSdNddd+m1116TJK1bt06//fabU+slvzmcL18+h2XbtWuXasLCwoUL7a6zYsUKcxSlW2+4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JCTovffeS1cdM2bM0BdffCFJ6tq1qzZs2KBmzZqZvyDx9PRUvXr1tHTpUnOUw4ULF+qjjz5KUdfLL7+so0eP6uOPP1adOnWUJ08eSUm/uujRo4d5rLtw4UKO/pVWfHy8Zs2aJSlpdK527dpJyti+EhwcrAEDBuidd96RlPSru0WLFmU8WBdkx/c0K1iPH++++65LU27ldvSh9uXmdjl48KCeeuopxcXF6b777tP27dv17rvvqkyZMmYZT09P1axZUyNGjNCRI0fUqlUrmzoMw1CXLl106NAh5cmTRwsWLNDnn3+u++67zyyTP39+PfPMM/rnn39UpUoVJSQk6LnnntO+ffsyFL87ZXabe3h4qGLFilq8eLHuvfdeSdJXX33l0rDxmcG6nz799NPq1q2bzWu3q0ceeUS+vr763//+l6P/17id5eZ+0pHc3C579+7Vc889p4SEBFWqVEn//POPevToYfNL/fLly2vMmDFatGiRvL29dejQIXXp0sVufWPHjlW3bt107733muckFotFd999tz7//HNzlLoZM2a4NPVKVuN61O2D61H25eZ+zZHc2i6Zcf8C7hcZGamlS5fK09NT7733nurXr6+4uDjNnj073XWGhoZqzJgxeuqppyRJW7du1ZYtWzIrZKfMnDlTN27c0KOPPqp+/frJYrFo0aJFOn/+fJbGkZky45puTpFb+8W00C4puXotpHv37pKSRh1KjXWZo9ET7733Xu3du1cLFixQ+/btzRF1PT09VatWLa1atUqVK1eWpDtidKOM4Bzm9uHuc5gcm2Rl1bRpU0lJN/Mczf+4detW7dq1S0FBQWrVqpW6desmi8WiJUuWKCoqyi2xJf8i5cuXL1NuMDort7XL9u3bzee33qiwx94Qqm+//bYSExNVqFAhfffdd8qbN2+q6z///PN67rnnJElTp05NccCsWrWqw2Erw8LC1LBhQ0lJn0FO5c79o2vXruZJZFa3gXVf69ixo3x9fc0bIo7+0bgdDBw4UP7+/jp58qSZ8AFbua1vdFZubhcPDw/zH/8ff/zRZno7Z8THx6t///6Skm58fPvttw6HFv3www/1yCOPSJJGjhxpDu9tFR4e7nAapjp16pg32nPy8WPRokU6d+6cypUrp/DwcPOEbtasWRm+kWM9OZGy7/iRHd9TdxoxYoQ8PDy0detW/fDDD9kd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Xr9+XTt27FCXLl20bNkySUk/zEj+Qxl3+v7773X58mWFhYXZ3PSX/ksMmTt3rmJjYx3Wk5iYmOZ+cvHiRbe9j7Sk55pudqJftI92SVt6roX4+fmpU6dONiNXSTKv4T/77LMZiikqKkqdO3dWYmKiypQpo379+qWrnurVq+vLL7/U0aNHFRcXpwsXLigmJkY//vij7rnnHsXHx+uVV17Rjz/+mKF43YVzGMdy8v8b7jqHyTFJVskbOfkv67t166Z//vlHxYoVs7veoUOHtH79ers7gPTfPxLz5s3LtF/sW7P22rZtm2IO07Jly6pOnTpKTEx0+QajPbTLf7y8vDR06FCdOnVKM2fO1PPPP68qVarI29tbknT27FmNGTNG999/v/78888MvZf02rdvn9q2bav4+HhVrFhRX331VbbEkZbM3D+GDBli/nLSy8tLZcqU0eDBgxUXF6dChQpp0aJFCg4Odsv7uNXUqVNlGIYeeughlS5d2mZZ8jnJnTnQHTlyRIZhOHxkF29vb3344YeSkr53+/fvz7ZYsgt9o320i2Ply5c3TyoGDhyoGzduZFrdGbV+/XoztkaNGmno0KHZHJF9v//+u44ePap8+fLZne7Euq9YT+IcefbZZ83jh4+Pj+677z598cUXSkxMVFhYmBYvXiwvL69Mfw/2ZOb+mNax48iRI+54C04pWLCgeSI8evRopxPIcwv6UPtoFziSmW1uPSZYLBYFBwercePG2rZtmyTpqaee0oABAzI9fntiYmLMqbZuvQEj/bfvrlq1SsePH3dYV/fu3dM8LgwaNCjz34STnn32WZUvX17x8fEaOHBgtsVxu6OftI92cb9WrVopIiJCERERun79unbu3Kknn3xSH374oe6//35t2rQpu0NMgetRXI+6ndGv2Ue7/Ccn3r/IyX1KVvruu+909epVlS5dWg8//LDNMg8PD5d+SNGwYUPz+OPn56eqVauaiT/VqlXL0iQg6z799NNPpxhZ5pFHHlGxYsV06dIl8/wmNaVKlUpzP1m9erXb3kdacvI1XXvoF+2jXezLjGsh1u/H9OnTlZiYaCYveXp62r2u4awrV67oiSee0LFjxxQQEKD58+fL398/XXW99tpr6tWrl0qVKmX+GCRv3rxq27attmzZYk4V+eabb+a4YxPnMJzD2JNjkqysDZyYmKjTp09r0qRJ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BUBJXXnllamqqmo3xo8fX9y/cePG1NfXZ+jQodlrr70yffr0NDU1lTFiAAAAANiuubk5VVVVGTx48A6PaWhoSE1NTXGMHj26+wIEAAC6hSYrAEruoIMOyvPPP18cP/zhD4v7Lrrootx333258847s2TJkqxbty6nnXZaGaMFAAAAgK02btyYSy65JGeccUYGDRq0w+Nmz56d5ubm4li7dm03RgkAAHQHjwsEoOT69OmT2traN2xvbm7OLbfckgULFuT4449PksybNy8HHHBAli9fnkmTJnV3qAAAADvtiu+uKOn51/+urd3Ppb5eklw1bWLJr/FWVA+s6fBngFLYvHlz/uqv/iqFQiFz587t9Njq6upUV1d3U2QAAEA5aLICoOSefvrpjBo1Kv369UtdXV0aGhoyZsyYrFy5Mps3b86UKVOKx44fPz5jxozJsmXLdthk1dbWlra27V8ytLS0lPwzAAAAUH4TzvhUuUMAdhPbGqx+9atf5fvf/36nd7ECAAB2D5qsACipiRMnZv78+dl///3z/PPP56qrrsoxxxyTJ598Mo2Njenbt28GDx7c7j0jRoxIY2PjDs/Z0NCQq666qsSRAwAAALx93XH3OXe861rbGqyefvrp/OAHP8jQoUPLHRIAAFABNFkBUFLTpk0r/jxhwoRMnDgxY8eOzbe//e3079//LZ1z9uzZmTVrVvF1S0tLRo8e/bZjBQAAAGDXt2HDhjzzzDPF188++2xWrVqVIUOGZOTIkfnLv/zLPP7447n//vvz6quvFv8x4JAhQ9K3b99yhQ0AAJSZJisAutXgwYPz7ne/O88880ze//73Z9OmTVm/fn27u1k1NTWltrZ2h+eorq5OdXV1N0QLAAAAwK7msccey3HHHVd8ve0f882YMSNXXnll7r333iTJYYcd1u59P/jBDzJ58uTuChMAgDexK941dle+Y+yuQJMVAN1qw4YN+fnPf56PfexjOeKII7LHHntk8eLFmT59epJk9erVWbNmTerq6socKfB2XXDBBXnxxReTJMOGDcsNN9xQ5ogAAAAgmTx5cgqFwg73d7YPAADYfWmyAqCk/v7v/z4nn3xyxo4dm3Xr1uWKK65I7969c8YZZ6SmpiYzZ87MrFmzMmTIkAwaNCjnn39+6urqMmnSpHKHDrxNL774YpqamsodBgAAAAAAALxtmqwA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rq3dz6W+XpJcNW1iya8BAAAAu4K1a9fmggsuyKJFi9KvX78uOefs2bMza9as4uuWlhaNVgC7idra2iRJU1NTRo4cWdze1NSUww47bIfvq66uTnV1danDAwAAysidrAAAAADosVauXJkXXngh73nPe9KnT5/06dMnS5YsyY033pg+ffpkxIgR2bRpU9avX9/ufU1NTcUv0l+vuro6gwYNajcA2D2MGzcutbW1Wbx4cXFbS0tLVqxYkbq6ujJGBgAAlJs7WQEAAADQY51wwgl54okn2m07++yzM378+FxyySUZPXp09thjjyxevDjTp09PkqxevTpr1qzxZTnAbmrDhg155plniq+fffbZrFq1KkOGDMmYMWNy4YUX5rOf/Wze9a53Zdy4cbnssssyatSonHrqqeULGgAAKDtNVgAAAAD0WAMHDszBBx/cbtuAAQMydOjQ4vaZM2dm1qxZGTJkSAYNGpTzzz8/dXV1mTRpUjlCBqDMHnvssRx33HHF19seETtjxozMnz8/F198cVpbW3POOedk/fr1Ofroo7Nw4cIueywtAADQM2myAgAAAGCXdt1116VXr16ZPn162traMnXq1Nx0003lDguAMpk8eXIKhcIO91dVVeXqq6/O1Vdf3Y1RAQAAla5XuQMAAAAAgK708MMP5/rrry++7tevX+bMmZOXX345ra2tueuuu1JbW1u+AAEAgB7lueeey0c/+tEMHTo0/fv3zyGHHJLHHnusuL9QKOTyyy/PyJEj079//0yZMiVPP/10GSMGoBQ0WQEAAAAAAABAB1555ZUcddRR2WOPPfLd7343Tz31VP73//7f2XvvvYvHXHvttbnxxhtz8803Z8WKFRkwYECmTp2ajRs3ljFyALqaxwUCAAAAAAAAQAe++MUvZvTo0Zk3b15x27hx44o/FwqFXH/99bn00ktzyimnJEm+8Y1vZMSIEbnnnnty+umnd3vMAJSGO1kB0G2+8IUvpKqqKhdeeGFx28aNG1NfX5+hQ4dmr732yvTp09PU1FS+IAEAAAAAAF5z77335r3vfW8+/OEPZ/jw4Tn88MPz9a9/vbj/2WefTWNjY6ZMmVLcVlNTk4kTJ2bZsmUdnrOtrS0tLS3tBgCVT5MVvInqgTWpHjR46xhYU+5woMd69NFH88///M+ZMGFCu+0XXXRR7rvvvtx5551ZsmRJ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zJ07N8uXL8++++6bW265JQsWLMjxxx+fJJk3b14OOOCALF++PJMmTSpHyAAAAAAAAADQjiYr4I9WPbCmw5/hj/Xqq6/mzjvvTGtra+rq6rJy5cps3rw5U6ZMKR4zfvz4jBkzJsuWLdthk1VbW1va2tqKr1taWkoeOwAAAAAAAAC7L01WwB9twhmfKncI9FBPPPFE6urqsnHjxuy11165++67c+CBB2bVqlXp27dvBg8e3O74ESNGpLGxcYfna2hoyFVXXVXiqAEAAAAAAABgq17lDgCAXd/++++fVatWZcWKFTn33HMzY8aMPPXUU2/5fLNnz05zc3NxrF27tgujBQAAAAAAAID23MkKgJLr27dv3vnOdyZJjjjiiDz66KO54YYb8td//dfZtGlT1q9f3+5uVk1NTamtrd3h+aqrq1NdXV3qsAEAAAAAAAAgiTtZAVAGW7ZsSVtbW4444ojsscceWbx4cXHf6tWrs2bNmtTV1ZUxQgBK5R3veEeqqqreMOrr65MkkydPfsO+v/3bv213jjVr1uSkk07KnnvumeHDh+czn/lMfv/735fj4wAAAAAAALuJnW6yWrp0aU4++eSMGjUqVVVVueeee9rtLxQKufzyyzNy5Mj0798/U6ZMydNPP91V8QLQw8yePTtLly7NL3/5yzzxxBOZPXt2Hn744Zx55pmpqanJzJkzM2vWrPzgBz/IypUrc/bZZ6euri6TJk0qd+gAlMCjjz6a559/vjgWLVqUJPnwhz9cPOaTn/xku2Ouvfba4r5XX301J510UjZt2pRHHnkkt956a+bPn5/LL7+82z8LAAAAAACw+9jpJqvW1tYceuihmTNnTof7r7322tx44425+eabs2LFigwYMCBTp07Nxo0b33awAPQ8L7zwQs4666zsv//+OeGEE/Loo4/mwQcfzPvf//4kyXXXXZcPfehDmT59eo499tjU1tbmrrvuKnPUAJTKsGHDUltbWxz3339/9ttvv/yv//W/isfsueee7Y4ZNGhQcd/3vve9PPXUU7ntttty2GGHZdq0abnmmmsyZ86cbNq0qRwfCQAAAAAA2A302dk3TJs2LdOmTetwX6FQyPXXX59LL700p5xySpLkG9/4RkaMGJF77rknp59++hve09bWlra2tuLrlpaWnQ0JgAp2yy23dLq/X79+mTNnzg6bdwHYdW3a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XXRR7rvvvtx5551ZsmRJ1q1bl9NOO62MUQMAAD1FoVDIeeedl7vvvjvf//73M27cuHb7jzjiiOyxxx5ZvHhxcdvq1auzZs2a1NXVdXe4AAAAAPRQHhcIQEktXLiw3ev58+dn+PDhWblyZY499tg0NzfnlltuyYIFC3L88ccnSebNm5cDDjggy5cvz6RJk8oRNgAA0EPU19dnwYIF+Y//+I8MHDgwjY2NSZKampr0798/NTU1mTlzZmbNmpUhQ4Zk0KBBOf/881NXV2e9AQAAAMAfTZMVAN2qubk5STJkyJAkycqVK7N58+ZMmTKleMz48eMzZsyYLFu2rMMvPdra2tLW1lZ83dLSUuKoAQCASjV37twkyeTJk9ttnzdvXj7+8Y8nSa677rr06tUr06dPT1tbW6ZOnZqbbrqpmyMFAAAAoCfTZAVAt9myZUsuvPDCHHXUUTn44IOTJI2Njenbt28GDx7c7tgRI0YU/wX66zU0NOSqq64qdbgAAEAPUCgU3vSYfv36Zc6cOZkzZ043RAQAAADArqhXuQMAYPdRX1+fJ598MnfcccfbOs/s2bPT3NxcHGvXru2iCAEotSuvvDJVVVXtxvjx44v7N27cmPr6+gwdOjR77bVXpk+fnqampnbnWLNmTU466aTsueeeGT58eD7zmc/k97//fXd/FAAAAAAAYDfiTlYAdIvzzjsv999/f5YuXZp99923uL22tjabNm3K+vXr293NqqmpKbW1tR2eq7q6OtXV1aUOGYASOeigg/LQQw8VX/fps31ZctFFF+U73/lO7rzzztTU1OS8887Laaedlh/96EdJkldffTUnnXRSamtr88gjj+T555/PWWedlT322COf//znu/2zAAAAAAAAuwd3sgKgpAqFQs4777zcfffd+f73v59x48a123/EEUdkjz32yOLFi4vbVq9enTVr1qSurq67wwWgG/Tp0ye1tbXFsc8++yRJmpubc8stt+QrX/lKjj/++BxxxBGZN29eHnnkkSxfvjxJ8r3vfS9PPfVUbrvtthx22GGZNm1arrnmmsyZMyebNm0q58cCAAAAAAB2YZqsACip+vr63HbbbVmwYEEGDhyYxsbGNDY25ne/+12SpKamJjNnzsysWbPygx/8ICtXrszZZ5+durq6TJo0qczRA1AKTz/9dEaNGpU//dM/zZlnnpk1a9Yk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WDd6lTuArvbAAw/klltuyR577JFrrrmmuH3Dhg1Jkj333HOH7x0wYECS5De/+U2XxXPrrbfm1ltvzb333pvnnnsukydPzm233ZahQ4d22TU6Uil5OO+887Jx48bMnTv3bZ/rraiUPJx11llZuHBhnnvuuWzYsCH/9V//lY997GN56aWXctppp+XRRx9929d4M5WQi1deeSVJcu2116a1tTUPPPBAmpub88QTT+T9739/1qxZk5NPPjm//e1v39Z1OlMJeejIvffem+bm5hx00EE5/PDDu/z87FilzYly1Y2kcnKhdmxV7tpRCXmohLqRVEYuOqJ2lE+lzQlrjvLWjaRycqF2VEbtqIQ8dETdKJ9KmxPWHOWvHZWSB3WjMupGUhm56IjaUT6VNiesOaw5tlE71I43o3aUR6XNB2uO8teOSslDuetGUhm5qITaUQl56EhPrBu7VJPV//t//y8f/ehHUygU8qUvfan4TMly+v3vf59CoZB169blzjvvzK9//esccsghefDBB0t2zUrJw1133ZV77rkn//AP/5D999+/269fKXlItv7PxNSpUzNq1KgMGDAghx12WL7xjW/kH//xH7Np06Y3dO92tUrJxZYtW5Js/e/i3//93zNt2rQMGjQoBx98cO67777su++++dWvfpXbb7+9JNevlDx0ZNttEHtKh+6uohLnRDnqRlI5uVA7titn7aiUPJS7biSVk4uOqB3lUYlzwpqjfHUjqZxcJGpHUv7aUSl56Ii6UR6VOCesOaw5tlE3yl83ksrJRUfUjvKoxDlhzWHNsY3aoXa8GbWj+1XifLDmsObYxnfkW5W7dlRKHjrSE+vGLtNk9dxzz+UDH/hAXnnllcyaNSsXXHBBu/3bnunZWfdfa2trknT5Lc6SZOTIkfnLv/zLPPTQQ6mqqsrHP/7x4vW6UqXkoaWlJeeff37e9a535R//8R/f8nneqkrJw5u5+OKL07t37zz88MPZtGlTSa5RSbnYdq0DDzww73vf+9rtq66uzkc+8pEkyZIlS97WdTpSSXl4vZdeeikLFy5Mr169cuaZZ3bpudmxSp4TSffVjaRycqF2/HFKXTsqKQ/lrBtJZeXi9dSO8qjkOZFYc5RDpeTizagdW1lzqBvdrZLnRGLNYc2xY+rGVtYcakc5VPKcSKw5yqFScvFm1I6t1A61o7tV8nxI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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "suhu_tiapbulan = dataku.groupby(\"month\")[\"TEMP\"].mean()"
      ],
      "metadata": {
        "id": "3d5gdSS76ODP"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.bar(suhu_tiapbulan.index, suhu_tiapbulan.values)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "nZQRj6mw6j9T",
        "outputId": "abfefd98-2a6a-4de1-f42c-be03b8a8c22e"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 12 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_pivot = dataku.pivot_table(index='month', columns='year', values='TEMP')"
      ],
      "metadata": {
        "id": "GECWeMuWejl_"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sns.heatmap(data_pivot, cmap='Blues', linecolor='White', linewidths=1);\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "AATeE2aGepvr",
        "outputId": "e9d089fa-6623-410c-9054-5123eefdea2d"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Conclusion"
      ],
      "metadata": {
        "id": "Oq-6EndLMGAg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Conclution pertanyaan 1\n",
        "tahun dengan kondisi terbaik adalah pada tahun 2016 karena pada tahun ini kandungan SO2,NO2,CO,PM2.5 TERENDAH DARI TAHUN 2013 SAMPAI 2017\n",
        "- conclution pertanyaan 2\n",
        "suhu tidak ada hubungan dengan senyawa poliutan namun seteh di lihat dari suhu tap bulan suhu tertinggi terdapat pada bulan ke 7 dan 8 yang merupakan musim panas di china sehingga musim lah yang mempunyai pengaruh terhadap suhu udara di sana"
      ],
      "metadata": {
        "id": "LMbk7wr9fFS6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataku.to_csv(\"dataku.csv\", index=False)"
      ],
      "metadata": {
        "id": "kZaLZfylMBe9"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "82xHNcm0qBII"
      },
      "execution_count": 25,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}